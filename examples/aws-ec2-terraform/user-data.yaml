#cloud-config

repo_update: true
repo_upgrade: all

packages:
  - awscli
  - jq
  - curl

write_files:

  - path: /etc/docker.env
    permissions: '0600'
    owner: root
    content: |
      DOCKER_DOWNLOAD_URL="https://get.docker.com/builds/Linux/x86_64/docker-1.10.1"

  - path: /etc/weave.env
    permissions: '0600'
    owner: root
    content: |
      WEAVEPROXY_ARGS="--rewrite-inspect"
      WEAVE_DOWNLOAD_URL="git.io/weave"

  - path: /etc/kubernetes-anywhere.env
    permissions: '0600'
    owner: root
    content: |
      ETCD_CLUSTER_SIZE="3"
      CLOUD_PROVIDER="aws"
      DOCKER_HOST="unix:///var/run/weave/weave.sock"

  - path: /etc/systemd/system/install-docker.service
    content: |
      [Unit]
      After=network-online.target
      Before=docker.service
      Before=install-weave.service
      Requires=network-online.target
      Description=Download Docker Binary
      ConditionFileNotEmpty=!/usr/local/bin/docker
      ConditionFileIsExecutable=!/usr/local/bin/docker
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=0
      EnvironmentFile=/etc/docker.env
      ExecStart=/usr/bin/curl \
        --silent \
        --location \
        $DOCKER_DOWNLOAD_URL \
        --output /usr/local/bin/docker
      ExecStartPost=/bin/chmod +x /usr/local/bin/docker
      [Install]
      WantedBy=weave-network.target
      WantedBy=weave.service

  - path: /etc/systemd/system/install-weave.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      After=network-online.target
      After=docker.service
      After=install-docker.service
      Before=weave.service
      Requires=docker.service
      Requires=install-docker.service
      Requires=network-online.target
      Description=Install Weave
      Documentation=http://docs.weave.works/
      ConditionFileNotEmpty=!/usr/local/bin/weave
      ConditionFileIsExecutable=!/usr/local/bin/weave
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=0
      EnvironmentFile=-/etc/weave.env
      ExecStartPre=/usr/bin/curl \
        --silent \
        --location \
        $WEAVE_DOWNLOAD_URL \
        --output /usr/local/bin/weave
      ExecStartPre=/bin/chmod +x /usr/local/bin/weave
      ExecStart=/usr/local/bin/weave setup
      [Install]
      WantedBy=weave-network.target
      WantedBy=weave.service

  - path: /etc/systemd/system/weave-network.target
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Description=Weave Net Setup Complete
      Documentation=man:systemd.special(7)
      RefuseManualStart=no
      After=network-online.target
      After=weave.service
      After=docker.service
      [Install]
      WantedBy=multi-user.target
      WantedBy=kubernetes-master.target
      WantedBy=kubernetes-node.target

  - path: /etc/systemd/system/kubernetes-master.target
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Description=Kubernetes Cluster Master
      Documentation=http://kubernetes.io/
      RefuseManualStart=no
      After=weave-network.target
      Requires=weave-network.target
      Wants=kube-apiserver.service
      Wants=kube-scheduler.service
      Wants=kube-controller-manager.service
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/kubernetes-node.target
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Description=Kubernetes Cluster Node
      Documentation=http://kubernetes.io/
      RefuseManualStart=no
      After=weave-network.target
      Requires=weave-network.target
      Wants=kube-proxy.service
      Wants=kubelet.service
      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/docker.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      After=install-docker.service
      Before=weave.service
      Before=weaveproxy.service
      Requires=install-docker.service
      Description=Docker Daemon
      [Service]
      EnvironmentFile=/etc/docker.env
      ExecStart=/usr/local/bin/docker daemon $DOCKER_ARGS
      Restart=on-failure
      [Install]
      WantedBy=weave-network.target
      WantedBy=weave.service

  - path: /etc/systemd/system/weave.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      After=docker.service
      After=install-weave.service
      Requires=docker.service
      Requires=install-weave.service
      Description=Weave Net Router
      Documentation=http://docs.weave.works/
      [Service]
      TimeoutStartSec=0
      EnvironmentFile=-/etc/weave.env
      ExecStartPre=/usr/local/bin/weave launch-router $WEAVE_PEERS
      ExecStart=/usr/local/bin/docker attach weave
      Restart=on-failure
      ExecStop=/usr/local/bin/weave stop-router
      [Install]
      WantedBy=weave-network.target

  - path: /etc/systemd/system/weaveproxy.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      After=docker.service
      After=install-weave.service
      Requires=docker.service
      Requires=install-weave.service
      Description=Weave Net proxy for Docker API
      Documentation=http://docs.weave.works/
      [Service]
      EnvironmentFile=-/etc/weave.env
      ExecStartPre=/usr/local/bin/weave launch-proxy $WEAVEPROXY_ARGS
      ExecStart=/usr/local/bin/docker attach weaveproxy
      Restart=on-failure
      ExecStop=/usr/local/bin/weave stop-proxy
      [Install]
      WantedBy=weave-network.target

  - path: /etc/systemd/system/weave-expose.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      After=docker.service
      After=install-weave.service
      After=weave.service
      Requires=docker.service
      Requires=install-weave.service
      Requires=weave.service
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=0
      EnvironmentFile=-/etc/weave.env
      ExecStart=/usr/local/bin/weave expose $WEAVE_EXPOSE_ARGS
      ExecStop=/usr/local/bin/weave hide
      [Install]
      WantedBy=weave-network.target

  - path: /etc/systemd/system/kube-apiserver.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      Before=kube-scheduler.service
      Before=kube-controller-manager.service
      Description=Kubernetes API Server
      Documentation=http://kubernetes.io/
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:apiserver
      ExecStartPre=-/usr/local/bin/docker rm -f kube-apiserver
      ExecStart=/usr/local/bin/docker run \
        --env=ETCD_CLUSTER_SIZE \
        --env=CLOUD_PROVIDER \
        --name=kube-apiserver \
          weaveworks/kubernetes-anywhere:apiserver
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=kubernetes-master.target

  - path: /etc/systemd/system/kube-scheduler.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      After=kube-apiserver.service
      Description=Kubernetes Scheduler
      Documentation=http://kubernetes.io/
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:scheduler
      ExecStartPre=-/usr/local/bin/docker rm -f kube-scheduler
      ExecStart=/usr/local/bin/docker run \
        --name=kube-scheduler \
          weaveworks/kubernetes-anywhere:scheduler
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=kubernetes-master.target

  - path: /etc/systemd/system/kube-controller-manager.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      After=kube-apiserver.service
      Description=Kubernetes Controller Manager
      Documentation=http://kubernetes.io/
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:controller-manager
      ExecStartPre=-/usr/local/bin/docker rm -f kube-controller-manager
      ExecStart=/usr/local/bin/docker run \
        --env=CLOUD_PROVIDER \
        --name=kube-controller-manager \
          weaveworks/kubernetes-anywhere:controller-manager
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=kubernetes-master.target

  - path: /etc/systemd/system/kubelet.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      Description=Kubelet
      Documentation=http://kubernetes.io/
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:kubelet
      ExecStartPre=-/usr/local/bin/docker rm -f kubelet
      ExecStartPre=-/usr/local/bin/docker run \
        --volume="/:/rootfs" \
        --volume="/var/run/weave/weave.sock:/weave.sock" \
        weaveworks/kubernetes-anywhere:tools \
        setup-kubelet-volumes
      ExecStart=/usr/local/bin/docker run \
        --env=CLOUD_PROVIDER \
        --env=AWS_LOCAL_HOSTNAME \
        --name=kubelet \
        --privileged=true --net=host --pid=host \
        --volumes-from=kubelet-volumes \
          weaveworks/kubernetes-anywhere:kubelet
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=kubernetes-node.target

  - path: /etc/systemd/system/kube-proxy.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      Description=Kubernetes Proxy
      Documentation=http://kubernetes.io/
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:proxy
      ExecStartPre=-/usr/local/bin/docker rm -f kube-proxy
      ExecStart=/usr/local/bin/docker run \
        --name=kube-proxy \
        --privileged=true --net=host --pid=host \
          weaveworks/kubernetes-anywhere:proxy
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=kubernetes-node.target

  - path: /etc/systemd/system/etcd.service
    permissions: '0600'
    owner: root
    content: |
      [Unit]
      Wants=weave-network.target
      After=weave-network.target
      [Service]
      EnvironmentFile=-/etc/kubernetes-anywhere.env
      ExecStartPre=/usr/local/bin/docker pull weaveworks/kubernetes-anywhere:etcd
      ExecStartPre=-/usr/local/bin/docker rm -f $ETCD_NODE_NAME
      ExecStart=/usr/local/bin/docker run \
        --env=ETCD_CLUSTER_SIZE \
        --name $ETCD_NODE_NAME \
          weaveworks/kubernetes-anywhere:etcd
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=multi-user.target

  - path: /tmp/kubernetes-anywhere-provision.sh
    owner: root
    permissions: '0755'
    content: |
      #!/bin/bash -x

      echo "WEAVE_EXPOSE_ARGS=\"-h $(hostname).weave.local\"" >> /etc/weave.env
      echo "AWS_LOCAL_HOSTNAME=\"$(hostname -f)\"" >> /etc/kubernetes-anywhere.env

      export AWS_DEFAULT_REGION=$(curl --silent curl http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)

      list_weave_peers_by_tag() {
        aws ec2 describe-instances --filters \
            'Name=tag:KubernetesCluster,Values=kubernetes' \
            'Name=instance-state-name,Values=running,pending' \
          | jq -r '.Reservations[].Instances[].PrivateIpAddress' \
          | grep -v null \
          | xargs
      }

      echo "WEAVE_PEERS=\"--init-peer-count 7 $(list_weave_peers_by_tag)\"" >> /etc/weave.env

      systemctl daemon-reload
      systemctl enable docker.service weave.service weaveproxy.service weave-expose.service weave-network.target
      systemctl start weave-network.target

      get_instance_description() {
        aws ec2 describe-instances \
          --instance-ids $(curl -s curl http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceId) \
          --filters 'Name=tag:KubernetesCluster,Values=kubernetes'
      }

      get_instance_name_tag() {
        get_instance_description \
          | jq -r '.Reservations[].Instances[].Tags[] | select(.Key=="Name") .Value'
      }

      get_etcd_node_name() {
        get_instance_description \
          | jq -r '.Reservations[].Instances[].Tags[] | select(.Key=="KubernetesEtcdNodeName") .Value'
      }

      case "$(get_instance_name_tag)" in
        kubernetes-etcd)
          echo "ETCD_NODE_NAME=\"$(get_etcd_node_name)\"" >> /etc/kubernetes-anywhere.env
          systemctl enable etcd.service
          systemctl start etcd.service
          ;;
        kubernetes-master)
          systemctl enable kube-apiserver.service kube-scheduler.service kube-controller-manager.service kubernetes-master.target
          systemctl start kubernetes-master.target
          ;;
        kubernetes-node)
          systemctl enable kubelet.service kube-proxy.service kubernetes-node.target
          systemctl start kubernetes-node.target
          ;;
      esac

runcmd:
  - /tmp/kubernetes-anywhere-provision.sh
